The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------
''add_integer'' from the ''0-add_integer'' module:
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[100, 200, 300], [400, 500, 600]]
>>> matrix_divided(matrix, 100)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]
>>> matrix_divided(matrix, -2)
[[-50.0, -100.0, -150.0], [-200.0, -250.0, -300.0]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero
>>> matrix_divided(matrix, "string")
Traceback (most recent call last):
TypeError: div must be a number
>>> matrix_divided("haha", 12)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix2 = [[10, 20, 30], [1, 2]]
>>> matrix_divided(matrix2, 5)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size
>>> matrix_divided(matrix, 300000.0)
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
>>> matrix_divided(matrix)
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> matrix()
Traceback (most recent call last):
TypeError: 'list' object is not callable
